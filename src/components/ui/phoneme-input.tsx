// components/ui/phoneme-input.tsx - Auto-generating Phoneme Input

"use client";

import { useState, useEffect, useCallback } from "react";
// import { Loader2, Wand2, RefreshCw, AlertCircle, CheckCircle } from 'lucide-react'
import { Loader2, Wand2, AlertCircle, CheckCircle } from "lucide-react";
import { useG2P } from "@/lib/hooks/useG2P";
import { Button } from "./button";
import { Input } from "./input";

interface PhonemeInputProps {
  value: string;
  onChange: (value: string) => void;
  gaWord: string;
  placeholder?: string;
  disabled?: boolean;
  className?: string;
}

export default function PhonemeInput({
  value,
  onChange,
  gaWord,
  placeholder = "e.g., d ù à d è",
  disabled = false,
  className = "",
}: PhonemeInputProps) {
  const { generatePhoneme, isGenerating, error, clearError } = useG2P();
  const [hasAutoGenerated, setHasAutoGenerated] = useState(false);
  const [lastGeneratedFor, setLastGeneratedFor] = useState("");

  // Wrap handleAutoGenerate with useCallback
  const handleAutoGenerate = useCallback(async () => {
    if (!gaWord.trim() || isGenerating) return;

    clearError();
    const phoneme = await generatePhoneme(gaWord.trim());

    if (phoneme) {
      onChange(phoneme);
      setHasAutoGenerated(true);
      setLastGeneratedFor(gaWord.trim());
    }
  }, [gaWord, isGenerating, clearError, generatePhoneme, onChange]);

  // Auto-generate when gaWord changes and phoneme is empty
  useEffect(() => {
    const shouldAutoGenerate =
      gaWord.trim() &&
      gaWord.trim() !== lastGeneratedFor &&
      !value.trim() &&
      !isGenerating;

    if (shouldAutoGenerate) {
      handleAutoGenerate();
    }
  }, [gaWord, lastGeneratedFor, value, isGenerating, handleAutoGenerate]);

  const handleManualGenerate = async () => {
    if (!gaWord.trim()) return;

    clearError();
    const phoneme = await generatePhoneme(gaWord.trim());

    if (phoneme) {
      onChange(phoneme);
      setHasAutoGenerated(true);
      setLastGeneratedFor(gaWord.trim());
    }
  };

  const handleInputChange = (newValue: string) => {
    onChange(newValue);
    if (newValue !== value) {
      setHasAutoGenerated(false);
    }
  };

  return (
    <div className="space-y-2">
      <div className="relative">
        <Input
          value={value}
          onChange={(e) => handleInputChange(e.target.value)}
          placeholder={placeholder}
          disabled={disabled || isGenerating}
          className={`pr-12 ${className}`}
        />

        {/* Generate Button */}
        {gaWord.trim() && (
          <Button
            type="button"
            variant="ghost"
            size="sm"
            onClick={handleManualGenerate}
            disabled={isGenerating || !gaWord.trim()}
            className="absolute right-1 top-1/2 -translate-y-1/2 h-8 w-8 p-0"
            title="Generate phoneme"
          >
            {isGenerating ? (
              <Loader2 className="h-4 w-4 animate-spin" />
            ) : (
              <Wand2 className="h-4 w-4" />
            )}
          </Button>
        )}
      </div>

      {/* Status Messages */}
      <div className="min-h-5">
        {isGenerating && (
          <div className="flex items-center text-sm text-blue-600">
            <Loader2 className="h-3 w-3 animate-spin mr-1" />
            Generating phoneme...
          </div>
        )}

        {error && (
          <div className="flex items-center text-sm text-red-600">
            <AlertCircle className="h-3 w-3 mr-1" />
            {error}
          </div>
        )}

        {hasAutoGenerated && !error && !isGenerating && value && (
          <div className="flex items-center text-sm text-green-600">
            <CheckCircle className="h-3 w-3 mr-1" />
            Auto-generated phoneme (you can edit it)
          </div>
        )}
      </div>

      {/* Help Text */}
      <div className="text-xs text-gray-500">
        {gaWord.trim() ? (
          <>
            Phoneme will be auto-generated when you type the Ga word. Click{" "}
            <Wand2 className="inline h-3 w-3 mx-1" /> to regenerate.
          </>
        ) : (
          "Enter a Ga word above to auto-generate its phoneme"
        )}
      </div>
    </div>
  );
}
